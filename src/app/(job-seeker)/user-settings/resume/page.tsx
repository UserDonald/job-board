import { DropzoneClient } from '@/components/dropzone-client';
import { MarkdownRenderer } from '@/components/markdown/markdown-renderer';
import { buttonVariants } from '@/components/ui/button';
import {
    Card,
    CardContent,
    CardDescription,
    CardFooter,
    CardHeader,
    CardTitle,
} from '@/components/ui/card';
import { db } from '@/drizzle/db';
import { UserResumeTable } from '@/drizzle/schema';
import { getCurrentUser } from '@/services/clerk/lib/get-current-auth';
import { eq } from 'drizzle-orm';
import Link from 'next/link';
import { notFound } from 'next/navigation';
import { Suspense } from 'react';

export default function UserResumePage() {
  return (
    <div className="max-w3xl mx-auto py-8 space-y-6 px-4">
      <h1 className="text-2xl font-bold">Upload Your Resume</h1>
      <Card>
        <CardContent>
          <DropzoneClient />
        </CardContent>
        <Suspense>
          <ResumeDetails />
        </Suspense>
      </Card>
      <Suspense>
        <AISummaryCard />
      </Suspense>
    </div>
  );
}

async function ResumeDetails() {
  const { userId } = await getCurrentUser();
  if (!userId) return notFound();
  const userResume = await getUserResume(userId);
  if (!userResume) return null;

  return (
    <CardFooter>
      <Link
        href={userResume.resumeFileUrl}
        className={buttonVariants()}
        target="_blank"
        rel="noopener noreferrer"
      >
        View Resume
      </Link>
    </CardFooter>
  );
}

async function AISummaryCard() {
  const { userId } = await getCurrentUser();
  if (!userId) return notFound();
  const userResume = await getUserResume(userId);
  if (!userResume || !userResume.aiSummary) return null;

  return (
    <Card>
      <CardHeader className="border-b">
        <CardTitle>AI Summary</CardTitle>
        <CardDescription>
          This is a summary of your resume generated by AI. This is used by
          employers to quickly assess your skills and experience.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <MarkdownRenderer source={userResume.aiSummary} className="prose-sm" />
      </CardContent>
    </Card>
  );
}

async function getUserResume(userId: string) {
  return db.query.UserResumeTable.findFirst({
    where: eq(UserResumeTable.userId, userId),
  });
}
